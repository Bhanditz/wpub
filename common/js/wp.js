/**
* Add an orcid image linked to the authors' and editors' ORCID ID-s (when applicable)
*
* The trigger is an additional "orcid" key in the person's object in the respec config. The "w3cid" key is also necessary (to be used anyway...)
*/
function create_wp(config) {
	let person_keys_mapping = {
		"editors" : "editor",
		"authors" : "author",
		"creators" : "creator"
	};

	const MANIFEST_ID = "wp_manifest";


	// Add the role=doc-toc attribute to the table of content
	let toc = document.querySelector("nav#toc");
	if(toc) {
		toc.setAttribute("role","doc-toc");
	}

	// Create the WP manifest, at the moment as a Javascript object
	let manifest = {
		"@context"              : ["https://schema.org", "https://www.w3.org/ns/wp-context"],
		"@type"                 : "CreativeWork",
        "accessMode"            : ["textual", "visual"],
        "accessModeSufficient"  : ["textual"],
        "copyrightHolder"       : "World Wide Web Consortium",    
    }

	// Get the publication date from the data generated by respec
	let publdate = document.querySelector("time.dt-published").getAttribute("datetime");
	manifest["copyrightYear"] = publdate.split('-')[0];
	manifest["datePublished"] = publdate;

	// Get the shortname to create the canonical URI for the document
	manifest["id"] = `https://www.w3.org/TR/${config["shortname"]}/`;

	// Get the current URL from the data generated by respec
	manifest["url"] = document.querySelector("a.u-url").getAttribute("href");

	Object.keys(person_keys_mapping).forEach( (key) => {
		if(config[key] !== undefined) {
			person = config[key].map( (person) => {
				retval = { "@type": "Person" };
				retval["name"] = person["name"];
				if( person["url"] !== undefined ) {
					retval["id"] = person["url"]
				}
				retval["affiliation"] = { "@type" : "Organization", "name" : person["company"] }
				if( person["companyURL"] !== undefined ) {
					retval["affiliation"]["url"] = person["companyURL"]
				}
				return retval;
			})
			manifest[person_keys_mapping[key]] = person
		}
	})


	// This is a fixed portion...

	manifest["links"] = [{
            "@type"      : "PublicationLink",
            "url"        : "https://www.w3.org/Consortium/Legal/privacy-statement-20140324",
            "fileFormat" : "text/html",
            "rel"        : "privacy-policy"
    },{
            "@type"      : "PublicationLink",
            "url"        : "https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document",
            "fileFormat" : "text/html",
            "rel"        : "license describedby"
    },{
            "@type"      : "PublicationLink",
            "url"        : "http://www.w3.org/Consortium/Legal/ipr-notice#Copyright",
            "fileFormat" : "text/html",
            "rel"        : "copyright describedby"
    }];

	// Get a link to the manifest reference:
	let head = document.getElementsByTagName("head")[0];
	let link = document.createElement("link");
	link.setAttribute("rel","publication");
	link.setAttribute("href",`#${MANIFEST_ID}`);
	head.appendChild(link);

	let manifest_element = document.createElement("script");
	manifest_element.setAttribute("type","application/ld+json");
	manifest_element.setAttribute("id",MANIFEST_ID);
	manifest_element.text = JSON.stringify(manifest, null, 4);
	head.appendChild(manifest_element);

	// For debug: display the manifest in JSON
	// alert(JSON.stringify(manifest, null, 4));
}